
###############################################################################
##
##Licensed Materials - Property of IBM
##
##(C) Copyright IBM Corp. 2021, 2023. All Rights Reserved.
##
##US Government Users Restricted Rights - Use, duplication or
##disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
##
###############################################################################
apiVersion: icp4a.ibm.com/v1
kind: ICP4ACluster
metadata:
  name: icp4adeploy
  labels:
    app.kubernetes.io/instance: ibm-dba
    app.kubernetes.io/managed-by: ibm-dba
    app.kubernetes.io/name: ibm-dba
    release: 24.0.0
spec:
  ## CP4A application version
  appVersion: 24.0.0

  ## MUST exist, used to accept ibm license, valid value only can be "accept"
  ibm_license: ""

  #####################################################################################################################
  ##  This template CR file reflects the ICP4A plaftorm foundation components shared by most of othe ICP4A capabilities,
  ##  as well as shared configurations for settings and services applicable to the ICP4A installation environment such
  ##  as LDAP, data sources, images information, storage classes, and other parameters you can find in the
  ##  shared_configuration section below.
  ##
  ##  The label, or "pattern name", for these foundation components is "foundation". You see this label set in the
  ##  sc_deployment_patterns parameter in the shared_configuration section of this file.
  ##
  ##  The ICP4A operator will automatically install the required foundation components, based on the description below, when
  ##  it detects the "foundation" pattern name amongst the sc_deployment_patters CR parameter of the CR being applied.
  ##
  ##  The foundation components that are automatically installed, by default, by the ICP4A operator are:
  ##    - Business Automation Navigator (BAN)
  ##    - Resource Registry (RR)
  ##
  ##  These other foundation components are installed based on their need, but their related minimal configuration
  ##  is included in this CR template.  Those additional platform components are:
  ##
  ##    - Business Automation Studio (BAS)
  ##    - User Management Services (UMS)
  ##    - Business Automation Insights (BAI)
  ##
  ##  Note that from the above foundation components, only BAI (with label "bai") will need to be explicitly specified
  ##  in the sc_optional_components parameter (in the shared_configuration) to inform the operator to install it, as
  ##  this installation of BAI reflects a user choice since BAI is not a pre-requisite component for any ICP4A capability.
  ##
  ##  This template CR contains the minimal configuration required for foundation components, since the ICP4A operator
  ##  will take care of defaults for a typicall configuration.
  ##
  ##  For BAN, RR, UMS and BAI you will not find dedicated configuration sections in this template since
  ##  default configurations are being used by the operator.
  ##
  ##  For BAB, UMS and BAI, you will only find  configuration parameters in the share_configuration section that need
  ##  to be configured.
  ##
  ##  For BAS, you will find a minimal bastudio_configuration section is in the CR, which will need to be present
  ##  and configured by you should if you are planning to install any of the following ICP4A capabilities and features:
  ##     - Automation Document Processing (ADP)
  ##     - Automation Digital Worker (digitalworker)
  ##     - the Applications Designer (app_designer) feature with  Business Automation Application (application)
  ##     - the Decision Designer feature (ads_designer) with Automation Decision Services (decisions_ads)
  ##
  ##  Note: In case non of these is to be installed, the bastudio_configuration should be commented out or deleted
  ##  from the final CR that will be applied.
  ##
  ##  How to use this template:
  ##
  ##  Make a copy of this CR foundation template as your starting point ICP4A CR yaml you are manually assembling.
  ##  Then paste into that CR the information and configuration from the respective
  ##  ibm_cp4a_cr_enterprise_<capability patter name>.yaml CR template files available in the same location.
  ##
  ######################################################################################################################
  shared_configuration:

    ## FileNet Content Manager (FNCM) license and possible values are: user, non-production, and production.
    ## This value could be different from the other licenses in the CR.
    sc_deployment_fncm_license: "<Required>"

    ## Use this parameter to specify the license for the CP4A deployment and
    ## the possible values are: non-production and production and if not set, the license will
    ## be defaulted to production.  This value could be different from the other licenses in the CR.
    sc_deployment_license: "<Required>"


    ## The deployment context, which has a default value of "CP4A".  Unless you are instructed to change this value or
    ## know the reason to change this value, please leave the default value.
    sc_deployment_context: "CP4A"

    ## All CP4A components must use/share the image_pull_secrets to pull images
    image_pull_secrets:
    - ibm-entitlement-key

    ## All CP4A components must use/share the same docker image repository.  For example, if IBM Entitled Registry is used, then
    ## it should be "cp.icr.io".  Otherwise, it will be a local docker registry.
    sc_image_repository: cp.icr.io

    ## Used to sign all CP4A internal certificates for internal services communications. In most cases, this value should not be changed.
    ## All CP4A components must use/share the root_ca_secret in order for integration
    root_ca_secret: icp4a-root-ca

    ## CP4A patterns or capabilities to be deployed.  This CR represents the "application" pattern (aka Business Automation Manager), which includes the following
    ## mandatory components: ban(Business Automation Navigator), ums (User Management Service), app_engine( Application Engine) and optional components: app_designerollowing
    ## mandatory components: icn (BAN/Navigator), rr (Resource Registry) and optional components: ums, bas, and bai
    sc_deployment_patterns: foundation

    ## The optional components to be installed if listed here.  This is normally populated by the User script based on input from the user.  User can
    ## also manually specify the optional components to be deployed here.  For this foundation CR, the optional components are: ums, bas and bai
    sc_optional_components:

    ## The deployment type as selected by the user.  Possible values are: Starter and Production.
    sc_deployment_type: Production

    ## The platform to be deployed specified by the user.  Possible values are: OCP and other.  This is normally populated by the User script
    ## based on input from the user.
    sc_deployment_platform:

    ## Optional: You can specify a profile size for CloudPak - valid values are small,medium,large - default is small.
    sc_deployment_profile_size: "small"

    ## This is the deployment hostname suffix, this is optional and the default hostname suffix will be used as {meta.namespace}.router-canonicalhostname
    # sc_deployment_hostname_suffix: "{{ meta.namespace }}.<Required>"

    ## For ROKS, this is used to enable the creation of ingresses. The default value is "false", which routes will be created.
    sc_ingress_enable: false

    ## For ROKS Ingress, provide TLS secret name for Ingress controller. If you are not using ROKS, comment out this line.
    sc_ingress_tls_secret_name: <Required>

    ## If the root certificate authority (CA) key of the external service is not signed by the operator root CA key, provide the TLS certificate of
    ## the external service to the component's truststore.
    trusted_certificate_list: []

    ## On OCP 3.x and 4.x, the User script will populate these three (3) parameters based on your input for "production" deployment.
    ## If you manually deploying without using the User script, then you would provide the different storage classes for the slow, medium
    ## and fast storage parameters below.  If you only have 1 storage class defined, then you can use that 1 storage class for all 3 parameters.
    ## sc_block_storage_classname is for Zen, Zen requires/recommends block storage (RWO) for metastoreDB
    storage_configuration:
      sc_slow_file_storage_classname: "<Required>"
      sc_medium_file_storage_classname: "<Required>"
      sc_fast_file_storage_classname: "<Required>"
      sc_block_storage_classname: "<Required>"

    ## IAM Settings
    sc_iam:
      ## Provide non default admin user for IAM in case you do not want to use cpadmin
      default_admin_username: ""

    ## Enable/disable FIPS mode for the deployment (default value is "false")
    ## Note: If set as "true", in order to complete enablement of FIPS for CP4BA, please refer to "FIPS wall" configuration in IBM documentation.
    enable_fips: false

    ## If a cluster is configured for multiple availability zones (AZ) and the parameter sc_is_multiple_az is set to true, then the pods are spread across all the zones.
    ## By default, the sc_is_multiple_az parameter is set to false. When the value is set to true, the pods of the CP4BA deployment are spread across your user-defined topology domains.
    ## The pod API includes a spec.topologySpreadConstraints field, which is used by the CP4BA operator to configure it.
    sc_is_multiple_az: false


  ## The beginning section of LDAP configuration for CP4A
  ldap_configuration:
    ## The possible values are: "IBM Security Directory Server" or "Microsoft Active Directory"
    lc_selected_ldap_type: "<Required>"

    ## The name of the LDAP server to connect
    lc_ldap_server: "<Required>"

    ## The port of the LDAP server to connect.  Some possible values are: 389, 636, etc.
    lc_ldap_port: "<Required>"

    ## The LDAP bind secret for LDAP authentication.  The secret is expected to have ldapUsername and ldapPassword keys.  Refer to Knowledge Center for more info.
    lc_bind_secret: ldap-bind-secret

    ## The LDAP base DN.  For example, "dc=example,dc=com", "dc=abc,dc=com", etc
    lc_ldap_base_dn: "<Required>"

    ## Enable SSL/TLS for LDAP communication. Refer to Knowledge Center for more info.
    lc_ldap_ssl_enabled: true

    ## The name of the secret that contains the LDAP SSL/TLS certificate.
    lc_ldap_ssl_secret_name: "<Required>"

    ## The LDAP user name attribute. Semicolon-separated list that must include the first RDN user distinguished names. One possible value is "*:uid" for TDS and "user:sAMAccountName" for AD. Refer to Knowledge Center for more info.
    lc_ldap_user_name_attribute: "<Required>"

    ## The LDAP user display name attribute. One possible value is "cn" for TDS and "sAMAccountName" for AD. Refer to Knowledge Center for more info.
    lc_ldap_user_display_name_attr: "<Required>"

    ## The LDAP group base DN.  For example, "dc=example,dc=com", "dc=abc,dc=com", etc
    lc_ldap_group_base_dn: "<Required>"

    ## The LDAP group name attribute.  One possible value is "*:cn" for TDS and "*:cn" for AD. Refer to Knowledge Center for more info.
    lc_ldap_group_name_attribute: "*:cn"

    ## The LDAP group display name attribute.  One possible value for both TDS and AD is "cn". Refer to Knowledge Center for more info.
    lc_ldap_group_display_name_attr: "cn"

    ## The LDAP group membership search filter string.  One possible value is "(|(&(objectclass=groupofnames)(member={0}))(&(objectclass=groupofuniquenames)(uniquemember={0})))" for TDS
    ## and "(&(cn=%v)(objectcategory=group))" for AD.
    lc_ldap_group_membership_search_filter: "<Required>"

    ## The LDAP group membership ID map.  One possible value is "groupofnames:member" for TDS and "memberOf:member" for AD.
    lc_ldap_group_member_id_map: "<Required>"

    ## The User script will uncomment the section needed based on user's input from User script.  If you are deploying without the User script,
    ## uncomment the necessary section (depending if you are using Active Directory (ad) or Tivoli Directory Service (tds)) accordingly.
    # ad:
    #   lc_ad_gc_host: "<Required>"
    #   lc_ad_gc_port: "<Required>"
    #   lc_user_filter: "(&(sAMAccountName=%v)(objectcategory=user))"
    #   lc_group_filter: "(&(cn=%v)(objectcategory=group))"
    # tds:
    #   lc_user_filter: "(&(cn=%v)(objectclass=person))"
    #   lc_group_filter: "(&(cn=%v)(|(objectclass=groupofnames)(objectclass=groupofuniquenames)(objectclass=groupofurls)))"

  ## The beginning section of database configuration for CP4A
  datasource_configuration:
    ## The dc_ssl_enabled parameter is used to support database connection over SSL for DB2/Oracle/PostgreSQL.
    dc_ssl_enabled: true
    ## The database_precheck parameter is used to enable or disable CPE/Navigator database connection check.
    ## If set to "true", then CPE/Navigator database connection check will be enabled.
    ## if set to "false", then CPE/Navigator database connection check will not be enabled.
   # database_precheck: true
    ## The database configuration for ICN (Navigator) - aka BAN (Business Automation Navigator)
    dc_icn_datasource:
      ## Operator will now have a capability to automatically provision an EDBPostgres instance upon request for Production/Enterprise deployment
      ## If you want PostgresDB to be created for a Navigator database, set this parameter to true
      dc_use_postgres: false
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle" or "postgresql".  This should be the same as the
      ## GCD and object store configuration above.
      dc_database_type: "<Required>"
      ## Provide the ICN datasource name.  The default value is "ECMClientDS".
      dc_common_icn_datasource_name: "ECMClientDS"
      database_servername: "<Required>"
      ## Provide the database server port.  For Db2, the default is "50000". As Oracle configuration requires a JDBC URL, set the parameter to no value or comment out the parameter.
      database_port: "<Required>"
      ## Provide the name of the database for ICN (Navigator).  For example: "ICNDB". As Oracle configuration requires a JDBC URL, set the parameter to no value or comment out the parameter.
      database_name: "<Required>"
      ## The name of the secret that contains the DB2/Oracle/PostgreSQL SSL certificate, the secret can contain multiple certificates in a single tls.crt field.
      database_ssl_secret_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_icn_jdbc_url: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3

  #############################################################################
  ## This section contains the BAStudio component configurations              #
  ##  it's the optional component: app_designer, ads_designer, bas,           #
  ##                               workflow-authoring                         #
  #############################################################################
  bastudio_configuration:
    #Adjust this one if you created the secret with name other than the default
    admin_secret_name: "{{ meta.name }}-bas-admin-secret"
    #-----------------------------------------------------------------------
    # bastudio admin Secret template will be
    #-----------------------------------------------------------------------
    # apiVersion: v1
    # stringData:
    #   dbPassword: "<Your database password>"
    #   dbUsername: "<Your database username>"
    # kind: Secret
    # metadata:
    #   name: icp4adeploy-bas-admin-secret
    # type: Opaque
    #-----------------------------------------------------------------------
    # Designate an existing LDAP user for the BAStudio admin user.
    admin_user:  "<Required>"
    database:
      #-----------------------------------------------------------------------
      # Configuration required for configure DB2 for BA Studio server
      # If you are not going to use DB2. Please comment out this section
      #-----------------------------------------------------------------------
      # Operator will now have a capability to automatically provision an EDBPostgres instance upon request for Production/Enterprise deployment
      # If you want PostgresDB to be created for a bastudio database, set this parameter to true
      # When you set dc_use_postgres to true, please ensure that the fields for host, port, and certificate_secret_name are left empty, and also set ssl_enabled to true.
      dc_use_postgres: false
      # Provide the database server hostname for BAStudio use
      host: "<Required>"
      # Provide the database name for BAStudio use, for example, BASDB
      # The database provided should be created by the BAStudio SQL script template.
      name: "<Required>"
      # Provide the database server port for BAStudio use
      port: "<Required>"
      # If you want to enable database automatic client reroute (ACR) for HADR, you must configure alternative_host and alternative_port. Otherwise, leave them blank.
      alternative_host:
      alternative_port:
      type: db2
      #-----------------------------------------------------------------------
      # Configuration required for configure Oracle for BA Studio server
      # If you are going to use Oracle. Please uncomment this section
      #-----------------------------------------------------------------------
      # type: oracle
      # ## Oracle - If you are using Oracle input the oracle database connection URL here
      # jdbc_url: <Required>
      # ## Input your Oracle JDBC jar files here. Like: ojdbc8.jar
      # jdbc_driver_files: <Required>
      #-----------------------------------------------------------------------
      # Configuration required for configure PostgreSQL for BA Studio server
      # If you are going to use PostgreSQL. Please uncomment this section
      #-----------------------------------------------------------------------
      # type: postgresql
      # ## Provide the database server hostname for BAStudio use
      # host: "<Required>"
      # ## Provide the database name for BAStudio use, for example, BASDB. It is case sensitive.
      # ## The database provided should be created by the BAStudio SQL script template.
      # name: "<Required>"
      # ## Provide the database server port for BAStudio use
      # port: "<Required>"
      # Provide the database connection URL if you don't provide database host, port and name.
      # jdbc_url:
      # ## Input your PostgreSQL JDBC jar files here. Like: postgresql-42.2.16.jar
      # jdbc_driver_files: <Required>
      # ## If you want to enable PostgreSQL Connection Fail-over, you must configure alternative_host and alternative_port. Otherwise, leave them blank.
      # alternative_host:
      # alternative_port:
      #-----------------------------------------------------------------------
      # Configuration required for configure SQLServer for BA Studio server
      # If you are going to use SQLServer. Please uncomment this section
      #-----------------------------------------------------------------------
      # type: sqlserver
      # ## Provide the database server hostname for BAStudio use, for example, BASDB
      # host: "<Required>"
      # ## Provide the database name for BAStudio use
      # ## The database provided should be created by the BAStudio SQL script template.
      # name: "<Required>"
      # ## Provide the database server port for BAStudio use
      # port: "<Required>"
      # Provide the database connection URL if you don't provide database host, port and name.
      # jdbc_url:
      # ## Input your SQLServer JDBC jar files here. Like: mssql-jdbc-8.2.0.jre8.jar
      # jdbc_driver_files: <Required>
      # ## If you want to enable SQLServer Connection Fail-over, you must configure alternative_host and alternative_port. Otherwise, leave them blank.
      # alternative_host:
      # alternative_port:
      #-----------------------------------------------------------------------
      # SSL connection for database is enabled by default. Please input the secret name including cert
      #-----------------------------------------------------------------------
      ssl_enabled: true
      certificate_secret_name: <Required>
    #-----------------------------------------------------------------------
    #  App Engine Playback Server (playback_server) can be only one instance. This is different from App Engine (where application_engine_configuration is a list and you can deploy multiple instances).
    #  You should use different database, admin_secret_name, hostname for playback server and the application engine servers
    #-----------------------------------------------------------------------
    playback_server:
      #Adjust this one if you created the secret with name other than the default
      admin_secret_name: playback-server-admin-secret
      #-----------------------------------------------------------------------
      # The playback server admin Secret template will be
      #-----------------------------------------------------------------------
      # apiVersion: v1
      # stringData:
      #   AE_DATABASE_PWD: "<Your database password>"
      #   AE_DATABASE_USER: "<Your database username>"
      #   REDIS_PASSWORD: "<Your Redis server password>"
      # kind: Secret
      # metadata:
      #   name: playback-server-admin-secret
      # type: Opaque
      #-----------------------------------------------------------------------
      # Designate an existing LDAP user for the Playback Application Engine admin user.
      # This user ID should be in the IBM Business Automation Navigator administrator role, as specified as appLoginUsername in the Navigator secret.
      # Required only when User Management Service (UMS) is configured: This user should also belong to UMS Teams admin group or the UMS Teams Administrators team.
      # If not, follow the instructions in "Completing post-deployment tasks for Business Automation Studio and Application Engine" in the IBM Documentation to add it to the Navigator Administrator role and UMS team server admin group.
      admin_user: "<Required>"
      database:
        #-----------------------------------------------------------------------
        # Configuration required for configure DB2 for BA Studio playback server
        # If you are going to use Oracle. Please comment out this section
        #-----------------------------------------------------------------------
        # Operator will now have a capability to automatically provision an EDBPostgres instance upon request for Production/Enterprise deployment
        # If you want PostgresDB to be created for a AE database, set this parameter to true
        # When you set dc_use_postgres to true, please ensure that the fields for host, port, and db_cert_secret_name are left empty, and also set enable_ssl to true.
        dc_use_postgres: false
        #Provide the database server hostname for playback application engine use
        host: "<Required>"
        #Provide the database name for playback application engine use, for example, APPDB
        name: "<Required>"
        #Provide the database server port for playback application engine use
        port: "<Required>"
        ## If you set up DB2 HADR and want to use it, you must configure alternative_host and alternative_port. Otherwise, leave them blank.
        alternative_host:
        alternative_port:
        type: db2
        #-----------------------------------------------------------------------
        # Configuration required for configure Oracle for BA Studio playback server
        # If you are going to use Oracle. Please uncomment this section
        #-----------------------------------------------------------------------
        # type: oracle
        # ## Required only when type is Oracle, both ssl and non-ssl. The format must be purely oracle descriptor like (DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=<your database host/IP>)(PORT=<your database port>))(CONNECT_DATA=(SERVICE_NAME=<your oracle service name>))). NOTES: PROTOCOL=TCP for non-ssl, PROTOCOL=TCPS for ssl.
        # oracle_url_without_wallet_directory: <Required>
        # ## Required only when type is Oracle and enable_ssl is true. The format must be purely oracle descriptor. SSO wallet directory must be specified and fixed to (MY_WALLET_DIRECTORY=/shared/resources/oracle/wallet).
        # oracle_url_with_wallet_directory:
        # ## Required only when type is oracle and enable_ssl is true.
        # oracle_sso_wallet_secret_name:
        #-----------------------------------------------------------------------
        # Configuration required for configure PostgreSQL for BA Studio playback server
        # If you are going to use PostgreSQL. Please uncomment this section
        #-----------------------------------------------------------------------
        # type: PostgreSQL
        # #Provide the database server hostname for playback application engine use
        # host: "<Required>"
        # #Provide the database name for playback application engine use, for example, APPDB. It is case sensitive.
        # name: "<Required>"
        # #Provide the database server port for playback application engine use
        # port: "<Required>"
        # ## If you want to enable PostgreSQL Connection Fail-over, you must configure alternative_host and alternative_port. Otherwise, leave them blank.
        # alternative_host:
        # alternative_port:
        #-----------------------------------------------------------------------
        # Configuration required for configure SQLServer for BA Studio playback server
        # If you are going to use SQLServer. Please uncomment this section
        #-----------------------------------------------------------------------
        # type: sqlserver
        # #Provide the database server hostname for playback application engine use
        # host: "<Required>"
        # #Provide the database name for playback application engine use, for example, APPDB
        # name: "<Required>"
        # #Provide the database server port for playback application engine use
        # port: "<Required>"
        # ## If you want to enable SQLServer Connection Fail-over, you must configure alternative_host and alternative_port. Otherwise, leave them blank.
        # alternative_host:
        # alternative_port:
        #-----------------------------------------------------------------------
        # SSL connection for database is enabled by default. Please input the secret name including cert
        #-----------------------------------------------------------------------
        enable_ssl: true
        db_cert_secret_name: <Required>
      #-----------------------------------------------------------------------
      # If you want better HA experience.
      # - Set the session.use_external_store to true
      # - Fill in your redis server information
      #-----------------------------------------------------------------------
      session:
        use_external_store: false
      redis:
        # Your external redis host/ip
        host:
        # Your external redis port
        port: '6379'
        # If your redis enabled TLS connection set this to true
        # You should add redis server CA certificate in tls_trust_list or trusted_certificate_list
        tls_enabled: false
        # If you are using Redis V6 and above with username fill in this field.
        # Otherwise leave this field as empty
        username:

  ########################################################################
  ########      IBM Business Automation Insights configuration    ########
  ########################################################################
  bai_configuration:


  #############################################################################
  ######## IBM Business Automation Application server  configurations  ########
  ##  This section contains the configurations for                           ##
  ##  * App Engine Server                                                    ##
  ##  it's the optional component and will be installed when                 ##
  ##  patterns include: application, workflow, workstreams,                  ##
  ##                    workflow-workstreams or document_processing          ##
  #############################################################################
  application_engine_configuration:
  ## The application_engine_configuration is a list. You can deploy multiple instances of App Engine and assign different configurations for each instance.
  ## For each instance, application_engine_configuration.name, database, admin_secret_name and hostname must be assigned to different values.
  ## Each application_engine_configuration.name can consist of lowercase alphanumeric characters or '-', and must start and end with an alphanumeric character. Keep the instance name as short as possible.
  ## You should use different database, admin_secret_name, hostname for playback server and the application engine servers
  - name: workspace
    #Adjust this one if you created the secret with name other than the default
    admin_secret_name: "{{ meta.name }}-workspace-aae-app-engine-admin-secret"
    #-----------------------------------------------------------------------
    # The app engine admin Secret template will be
    #-----------------------------------------------------------------------
    # apiVersion: v1
    # stringData:
    #   AE_DATABASE_PWD: "<Your database password>"
    #   AE_DATABASE_USER: "<Your database username>"
    #   REDIS_PASSWORD: "<Your Redis server password>"
    # kind: Secret
    # metadata:
    #   name: icp4adeploy-workspace-aae-app-engine-admin-secret
    # type: Opaque
    #-----------------------------------------------------------------------
    # Designate an existing LDAP user for the Application Engine admin user.
    # This user ID should be in the IBM Business Automation Navigator administrator role, as specified as appLoginUsername in the Navigator secret.
    # Required only when User Management Service (UMS) is configured: This user should also belong to UMS Teams admin group or the UMS Teams Administrators team.
    # If not, follow the instructions in "Completing post-deployment tasks for Business Automation Studio and Application Engine" in the IBM Documentation to add it to the Navigator Administrator role and UMS team server admin group.
    admin_user: "<Required>"
    database:
      #-----------------------------------------------------------------------
      # Configuration required for configure DB2 for App engine server
      # If you are going to use Oracle. Please comment out this section
      #-----------------------------------------------------------------------
      # Operator will now have a capability to automatically provision an EDBPostgres instance upon request for Production/Enterprise deployment
      # If you want PostgresDB to be created for a AE database, set this parameter to true
      # When you set dc_use_postgres to true, please ensure that the fields for host, port, and db_cert_secret_name are left empty, and also set enable_ssl to true.
      dc_use_postgres: false
      #Provide the database server hostname for runtime application engine use
      host: "<Required>"
      #Provide the database name for runtime application engine use, for example, AAEDB
      #Please pay attention that if you are install authoring environment also.
      #The database used by playback server and this one should be different
      name: "<Required>"
      #Provide the database server port for runtime application engine use
      port: "<Required>"
      ## If you set up DB2 HADR and want to use it, you must configure alternative_host and alternative_port. Otherwise, leave them blank.
      alternative_host:
      alternative_port:
      type: db2
      #-----------------------------------------------------------------------
      # Configuration required for configure Oracle for App engine server
      # If you are going to use Oracle. Please uncomment this section
      #-----------------------------------------------------------------------
      # type: oracle
      # ## Required only when type is Oracle, both ssl and non-ssl. The format must be purely oracle descriptor like (DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=<your database host/IP>)(PORT=<your database port>))(CONNECT_DATA=(SERVICE_NAME=<your oracle service name>))). NOTES: PROTOCOL=TCP for non-ssl, PROTOCOL=TCPS for ssl.
      # oracle_url_without_wallet_directory: <Required>
      # ## Required only when type is Oracle and enable_ssl is true. The format must be purely oracle descriptor. SSO wallet directory must be specified and fixed to (MY_WALLET_DIRECTORY=/shared/resources/oracle/wallet).
      # oracle_url_with_wallet_directory:
      # ## Required only when type is oracle and enable_ssl is true.
      # oracle_sso_wallet_secret_name:
      #-----------------------------------------------------------------------
      # Configuration required for configure PostgreSQL for App engine server
      # If you are going to use PostgreSQL. Please uncomment this section
      #-----------------------------------------------------------------------
      # type: PostgreSQL
      # #Provide the database server hostname for runtime application engine use
      # host: "<Required>"
      # #Provide the database name for runtime application engine use, for example, AAEDB. It is case sensitive.
      # #Please pay attention that if you are install authoring environment also.
      # #The database used by playback server and this one should be different
      # name: "<Required>"
      # #Provide the database server port for runtime application engine use
      # port: "<Required>"
      # ## If you want to enable PostgreSQL Connection Fail-over, you must configure alternative_host and alternative_port. Otherwise, leave them blank.
      # alternative_host:
      # alternative_port:
      #-----------------------------------------------------------------------
      # Configuration required for configure SQLSERVER for App engine server
      # If you are going to use SQLSERVER. Please uncomment this section
      #-----------------------------------------------------------------------
      # type: sqlserver
      # #Provide the database server hostname for runtime application engine use
      # host: "<Required>"
      # #Provide the database name for runtime application engine use, for example, AAEDB
      # #Please pay attention that if you are install authoring environment also.
      # #The database used by playback server and this one should be different
      # name: "<Required>"
      # #Provide the database server port for runtime application engine use
      # port: "<Required>"
      # ## If you want to enable SQLSERVER Connection Fail-over, you must configure alternative_host and alternative_port. Otherwise, leave them blank.
      # alternative_host:
      # alternative_port:
      #-----------------------------------------------------------------------
      # SSL connection for database is enabled by default. Please input the secret name including cert
      #-----------------------------------------------------------------------
      enable_ssl: true
      db_cert_secret_name: <Required>
    #-----------------------------------------------------------------------
    # If you want better HA experience.
    # - Set the session.use_external_store to true
    # - Fill in your redis server information
    #-----------------------------------------------------------------------
    session:
      use_external_store: false
    redis:
      # Your external redis host/ip
      host:
      # Your external redis port
      port: '6379'
      # If your redis enabled TLS connection set this to true
      # You should add redis server CA certificate in tls_trust_list or trusted_certificate_list
      tls_enabled: false
      # If you are using Redis V6 and above with username fill in this field.
      # Otherwise leave this field as empty
      username:
